
// switch to feedback database
use("feedback")

// show collections
db.getCollectionNames()

// get a particular class
db.students.find({batch: 2020, degree: "BE-CSE", section:"C"},{password:0, _id:0, "feedbacks._id": 0})

db.students.find(
    {batch: 2020, degree: "BE-CSE", section:"C"}
    ,{password: 0, dob: 0, batch: 0, degree: 0, section: 0, _id:0, "feedbacks._id":0  }
)

// students who have not submitted a feedback
db.students.find(
    {
        batch: 2020,
        degree: "BE-CSE",
        section:"C",
        'feedbacks.feedbackNo': "I",
        'feedbacks.semester': "V",
        "feedbacks.isSubmitted": false
    },
    {
        regNo: 1,
        name: 1,
        _id:0,  
    }
)

// update the students profile after the student
// has submitted a feedback
// db.students.updateOne(
//     {
//         regNo: 20104169,
//         'feedbacks.semester': "V",
//         'feedbacks.feedbackNo': "I",
//     },
//     {
//         $set: {
//         "feedbacks.$.isSubmitted": true
//         }
//     }
// )

// update the name of students to uppercase
db.students.aggregate(
   [
     {
       $project:
         {
           regNo: 1,
           name: { $toUpper: "$name" },
           dob: 1,
           batch: 1,
           degree: 1,
           section: 1,
           password: 1,
           feedbacks : 1
         }
     },
    //  {
    //     $out: {
    //         db: 'feedback',
    //         coll: 'students',
    //     }
    //  }
   ]
)

db.students.find({},{
  regNo: 1,
  name: 1,
  dob: 1,
  batch: 1,
  degree: 1,
  section: 1,
  password: 1,
  feedbacks : 1,
  _id:0
}) .forEach(
    function(n) {
   db.students.updateOne(
    { regNo: n.regNo },
    { $set: {
        regNo: n.regNo,
        name: n.name,
        dob: n.dob,
        batch: n.batch,
        degree: n.degree,
        section: n.section,
        password: n.password,
        feedbacks : n.feedbacks,
      }}
   )
    })